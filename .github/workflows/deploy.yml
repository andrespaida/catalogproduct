name: Build and Deploy catalog-product to EC2 from QA

on:
  push:
    branches:
      - qa

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: qa

    steps:
      # âœ… Checkout the source code
      - name: Checkout code
        uses: actions/checkout@v3

      # âœ… Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # âœ… Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/catalog-product:${{ env.IMAGE_TAG }} .

      # âœ… Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/catalog-product:${{ env.IMAGE_TAG }}

      # âœ… Prepare SSH access
      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          sed -i 's/\r//' key.pem
          chmod 400 key.pem

      # âœ… Deploy to EC2 using Docker Hub image
      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_HOST }} << EOF
            set -e
            echo "ðŸ“¦ Deploying catalog-product from Docker Hub..."

            # âœ… Install Docker if necessary
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            # âœ… Stop old container and run new one
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/catalog-product:${{ env.IMAGE_TAG }}
            sudo docker rm -f catalog-product || true

            sudo docker run -d --restart=always \
              --name catalog-product \
              -p 8080:8080 \
              ${{ secrets.DOCKER_USERNAME }}/catalog-product:${{ env.IMAGE_TAG }}

            echo "âœ… catalog-product deployed successfully (qa)"
          EOF